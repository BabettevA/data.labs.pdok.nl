prefix def: <http://betalinkeddata.cbs.nl/def/83487NED#>
prefix dimension: <http://betalinkeddata.cbs.nl/def/dimension#>
prefix gemeente: <http://betalinkeddata.cbs.nl/regios/2016/id/gemeente-geografisch/>
prefix geo: <http://www.opengis.net/ont/geosparql#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
select * {
  ?buurt
    geo:hasGeometry/geo:asWKT ?shape;
    rdfs:label ?buurtLabel;
    # HACK: GraphDB does not support querying for `geo:sfWithin', so
    # we use two SPARQL variables (and one SPARQL blank node to
    # connect them).  Notice that this only works as long as no other
    # link is added between neighborhoods and municipalities.
    ?blank1 _:1.
   _:1 ?blank2 gemeente:GM0637.
  optional {
    [ dimension:regio ?buurt;
      def:wonen_GemiddeldeWoningwaarde ?waarde ].
  }
  optional {
    [ dimension:regio ?buurt;
      def:wonen_Woningvoorraad ?voorraad ].
  }
  {
    {
      select (min(?waarde) as ?min) (max(?waarde) as ?max) {
        ?buurt def:wonen_GemiddeldeWoningwaarde ?waarde.
      }
    }
  }
  bind(if(bound(?voorraad),
          replace(str(?voorraad),'[0-9](?=(?:[0-9]{3})+(?![0-9]))','$0.'),
          'onbekend') as ?voorraadLabel)
  bind(if(bound(?waarde),
          concat('',str(?waarde),'.000 euro'),
          'onbekend') as ?waardeLabel)
  bind('''
       <h3>Zoetermeer {{buurtLabel}}</h3>
       <dl>
         <dt>Gemiddelde woningwaarde</dt>
         <dd>{{waardeLabel}}</dd>
         <dt>Woning voorraad</dt>
         <dd>{{voorraadLabel}}</dd>
       </dl>''' as ?shapeLabel)
  bind(concat('jet,',str((?waarde*5)/xsd:double(?max-?min*2))) as ?shapeColor)
}
limit 26
